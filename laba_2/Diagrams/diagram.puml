abstract class BaseStudent
{
#phone:String
#mail:String
#telegram:String
#git:String
+id:Integer
--
+initialize(Hash)
+has_git?:Boolean
+has_contact?:Boolean
+find_git:String
+find_contacts:String
+self.is_phone?:Boolean
+self.is_telegram?:Boolean
+self.is_mail?:Boolean
+self.is_git?:Boolean

..Геттеры..
+phone():String
+mail():String
+telegram():String
+git():String
+id():Integer
..Сеттеры..
#telegram=(String)
#mail=(String)
#git=(String)
#phone=(String)
#set_contacts=(String)
+id=(Integer)
}

class StudentShort extends BaseStudent
{
short_name:String
--
+initialize(Integer,String)
+self.init_from_student(Student):StudentShort
+to_s():String
+validate_all?(): Boolean

.. Геттеры ..
+short_name():String

.. Сеттеры ..
+short_name=(String)
}

class Student extends BaseStudent {
last_name: String
first_name: String
surname: String
--
+initialize(Hash)
+self.from_json_str(String)
+self.is_name?(String): Boolean
+get_info(): String
+short_name(): String
+find_git(): String
+to_hash(): Hash
+to_json_str(): String
+to_s(): String

    .. Геттеры ..
+last_name(): String
+first_name(): String
+surname(): String

    .. Сеттеры ..
+last_name=(String)
+first_name=(String)
+surname=(String)
}

class DataTable
{
+self.table
+self.row_number
+self.column_number
--
+get_item(Integer,Integer): Integer
--
#count_column_number: Integer
    .. Геттеры ..
+table(): List
+row_number(): Integer
+column_number(): Integer
    .. Сеттеры ..
#table=(List)
#row_number(Integer)
#column_number(Integer)
}
